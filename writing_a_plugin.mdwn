Most of the time, writing a plugin or adding Libravatar support to an existing web application involves very little work.

For example, have a look at how it was done for these two Perl applications:

* [Ikiwiki](http://ikiwiki.info)
 * <http://source.ikiwiki.branchable.com/?p=source.git;a=commit;h=7723e94218a8c526fc8d869086c05dd382268649>
 * <http://source.ikiwiki.branchable.com/?p=source.git;a=commit;h=e2e1b1cd20928e2b80871e5daffaea60738d054e>
* [Koha](http://koha-community.org)
 * <http://git.koha-community.org/gitweb/?p=koha.git;a=commit;h=d3990031eda7f1c87d8b9f74d97625cf0c143eb3>
 * <http://git.koha-community.org/gitweb/?p=koha.git;a=commit;h=f44b674ed5a70663bc5e9808b6d0a41cec5497a0>

As you can see, all of the hard bits are done in the [Libravatar::URL](http://search.cpan.org/~fmarier/Gravatar-URL-1.04/lib/Libravatar/URL.pm) CPAN module. Which brings us to the most important guideline...

# Use an existing [[library|libraries]]

If you try to do it all yourself inside the web application, it's likely that you will be missing a few corner cases (e.g. federation may not be fully working). As you can see from the [[API]], having a complete implementation is not just a matter of changing the base URL.

What should you do if a library is not available for your target language? Well, why not [[write one|writing a library]]? We'll be more than happy to help you in the process. Just come and [[talk to us]].

# Write a simple test page

As part of the main Libravatar [source code repository](https://gitorious.org/libravatar/libravatar), we have a few [test pages](https://gitorious.org/libravatar/libravatar/trees/master/contrib) for some of the libraries that have been contributed.

Once you have made a new library available, we'll be happy to include a small test case from you.
